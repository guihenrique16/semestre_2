<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Webapi.filmes.tarde</name>
    </assembly>
    <members>
        <member name="T:Webapi.filmes.tarde.Controllers.FilmeController">
            <summary>
            Route: define que a rota de uma requisição será no seguinte formato: dominio/api/nomeController
            Ex: http://Localhost:5000/api/genero
            </summary>
        </member>
        <member name="P:Webapi.filmes.tarde.Controllers.FilmeController._filmeRepository">
            <summary>
            Objeto que ira receber os metodos definidos na interface
            </summary>
        </member>
        <member name="M:Webapi.filmes.tarde.Controllers.FilmeController.#ctor">
            <summary>
            Instancia do objeto _filmeRepository para que haja referencia aos metodos do repositorios
            </summary>
        </member>
        <member name="M:Webapi.filmes.tarde.Controllers.FilmeController.post(Webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint que acessa o metodo de cadastrar Filmes
            </summary>
            <param name="NovoFilme">objeto recebido na aquisicao</param>
            <returns></returns>
        </member>
        <member name="M:Webapi.filmes.tarde.Controllers.FilmeController.Get">
            <summary>
            Endpoint que acessa o metodo de listar Filmes
            </summary>
            <returns> lista de filmes e um status code </returns>
        </member>
        <member name="T:Webapi.filmes.tarde.Controllers.GeneroController">
            <summary>
            Route: define que a rota de uma requisição será no seguinte formato: dominio/api/nomeController
            Ex: http://Localhost:5000/api/genero
            </summary>
        </member>
        <member name="P:Webapi.filmes.tarde.Controllers.GeneroController._generoRepository">
            <summary>
            Objeto que ira receber os metodos definidos na interface
            </summary>
        </member>
        <member name="M:Webapi.filmes.tarde.Controllers.GeneroController.#ctor">
            <summary>
            Instancia do objeto _generoRepository para que haja referencia aos metodos do repositorios
            </summary>
        </member>
        <member name="M:Webapi.filmes.tarde.Controllers.GeneroController.Get">
            <summary>
            Endpoint que acessa o metodo de listar generos
            </summary>
            <returns> lista de generos e um status code </returns>
        </member>
        <member name="M:Webapi.filmes.tarde.Controllers.GeneroController.post(Webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o metodo de cadastrar generos
            </summary>
            <param name="NovoGenero">objeto recebido na aquisicao</param>
            <returns></returns>
        </member>
        <member name="M:Webapi.filmes.tarde.Controllers.GeneroController.delete(System.Int32)">
            <summary>
            Endpoint que acessa o metodo de Excluir generos
            </summary>
            <param name="Id"> objeto que sera excluido </param>
            <returns></returns>
        </member>
        <member name="M:Webapi.filmes.tarde.Controllers.GeneroController.BuscarPorId(System.Int32)">
            <summary>
            Endpoint que acessa o metodo de buscar generos por Id
            </summary>
            <param name="Id"> objeto que sera buscado </param>
            <returns></returns>
        </member>
        <member name="M:Webapi.filmes.tarde.Controllers.GeneroController.Put(Webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o método de atualizar gêneros pelo Id no corpo
            </summary>
            <param name="genero">Objeto com as novas informações do gênero</param>
            <returns>Status code e mensagen a ser exibida</returns>
        </member>
        <member name="M:Webapi.filmes.tarde.Controllers.GeneroController.Put(System.Int32,Webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o método de atualizar gêneros pelo Id na Url
            </summary>
            <param name="Id">Id do gênero a ser atualizado</param>
            <param name="genero">Objeto com as novas informações do gênero a ser atualizado</param>
            <returns></returns>
        </member>
        <member name="T:Webapi.filmes.tarde.Domains.FilmeDomain">
            <summary>
            Classe que representa a entidade ou tabela Filme
            </summary>
        </member>
        <member name="T:Webapi.filmes.tarde.Domains.GeneroDomain">
            <summary>
            Classe que representa a entidade ou a tabela Genero
            </summary>
        </member>
        <member name="M:Webapi.filmes.tarde.Interfaces.IFilmeRepository.Cadastrar(Webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Método para cadastrar um novo filme
            </summary>
            <param name="NovoFilme">Objeto com as informações dos filmes a serem cadastrados</param>
        </member>
        <member name="M:Webapi.filmes.tarde.Interfaces.IFilmeRepository.ListarTodos">
            <summary>
            Método para listar todos os filmes
            </summary>
            <returns>A lista com todos os filmes</returns>
        </member>
        <member name="M:Webapi.filmes.tarde.Interfaces.IFilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Método para retornar um único filme por seu id
            </summary>
            <param name="Id">Id do filme a ser buscado</param>
            <returns>Os dados do filme com o id especificado</returns>
        </member>
        <member name="M:Webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdCorpo(Webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Método para alterar um filme pelo corpo da requisição
            </summary>
            <param name="FilmeAtualizado">O objeto com as novas informações do filme</param>
        </member>
        <member name="M:Webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdUrl(System.Int32,Webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Método para alterar um filme pelo id passado pela url
            </summary>
            <param name="Id">Id do filme a ser alterado</param>
            <param name="FilmeAtualizado">O objeto com as novas informações do filme</param>
        </member>
        <member name="M:Webapi.filmes.tarde.Interfaces.IFilmeRepository.ExcuirPorId(System.Int32)">
            <summary>
            Método para deltar um filme do banco de dados
            </summary>
            <param name="Id">Id do filme a ser deletado</param>
        </member>
        <member name="T:Webapi.filmes.tarde.Interfaces.IGeneroRepository">
            <summary>
            Interface responsavel pelo repositorio GeneroRepository
            Define os metodos que serao implementados pelo repositorio
            </summary>
        </member>
        <member name="M:Webapi.filmes.tarde.Interfaces.IGeneroRepository.Cadastrar(Webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo genero 
            </summary>
            <param name="NovoGenero"> Objeto que sera cadastrado </param>
        </member>
        <member name="M:Webapi.filmes.tarde.Interfaces.IGeneroRepository.ListarTodos">
            <summary>
            Retornar todos os generos cadastrados
            </summary>
            <returns> Uma lista generos </returns>
        </member>
        <member name="M:Webapi.filmes.tarde.Interfaces.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto atraves do seu id
            </summary>
            <param name="id"> id do objeto que sera buscado </param>
            <returns> objeto que foi buscado </returns>
        </member>
        <member name="M:Webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdCorpo(Webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar o genero existente passando o id pelo corpo da requisicao 
            </summary>
            <param name="genero"> Objeto com as novas informacoes </param>
        </member>
        <member name="M:Webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdUrl(System.Int32,Webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar o genero existente passando o id pela Url da requisicao
            </summary>
            <param name="Id"> id do objeto a ser atualizado </param>
            <param name="genero"> objeto com as novas informacoes </param>
        </member>
        <member name="M:Webapi.filmes.tarde.Interfaces.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um gênero existente
            </summary>
            <param name="id"> ID do objeto a ser deletado </param>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Webapi.filmes.tarde.Repositories.GeneroRepository.StringConexao" -->
        <member name="M:Webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdCorpo(Webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Método para atualizar um gênero existente pelo id no corpo
            </summary>
            <param name="genero">O objeto contendo as informações do gênero que serão atualizadas</param>
        </member>
        <member name="M:Webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdUrl(System.Int32,Webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Método para atualizar as informações de um gênero passando o id pela Url
            </summary>
            <param name="Id">O id do gênero a ser atualizado</param>
            <param name="genero">O objeto com as novas informações do gênero</param>
        </member>
        <member name="M:Webapi.filmes.tarde.Repositories.GeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            buscar genero por Id
            </summary>
            <param name="Id"> objeto que sera buscado </param>
            <returns></returns>
        </member>
        <member name="M:Webapi.filmes.tarde.Repositories.GeneroRepository.Cadastrar(Webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            cadastrar um novo genero
            </summary>
            <param name="NovoGenero"> objeto com as informacoes que serao cadastradas </param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Webapi.filmes.tarde.Repositories.GeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um genero
            </summary>
            <param name="Id"></param>
        </member>
        <member name="M:Webapi.filmes.tarde.Repositories.GeneroRepository.ListarTodos">
            <summary>
            Listar todos os objetos do tipo genero
            </summary>
            <returns>Lista de objetos do tipo gênero</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
    </members>
</doc>
